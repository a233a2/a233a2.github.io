<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>PX4 on sunjiyi&#39;s Blogggg</title>
        <link>https://a233a2.github.io/tags/px4/</link>
        <description>Recent content in PX4 on sunjiyi&#39;s Blogggg</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Sunjiyi Make and Design</copyright>
        <lastBuildDate>Fri, 29 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://a233a2.github.io/tags/px4/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Simulink-PX4-WSL2仿真环境搭建</title>
        <link>https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
        <pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate>
        
        <guid>https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
        <description>&lt;img src="https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/fengmian.png" alt="Featured image of post Simulink-PX4-WSL2仿真环境搭建" /&gt;&lt;h3 id=&#34;px4-simulink联合环境配置&#34;&gt;PX4-Simulink联合环境配置
&lt;/h3&gt;&lt;p&gt;参考如下教学： &lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV18P4y1T7UH&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PX4与Simulink联合仿真-入门篇&lt;/a&gt;        &lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV13S4y1P7QK&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PX4与Simulink联合仿真-进阶篇&lt;/a&gt;  &lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1sj42197TH&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用Pixhawk2.4.8基于Simulink进行入门级飞控算法自主开发的操作&lt;/a&gt;  &lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1nm4y1475s&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;基于Simulink的PX4飞控算法的开发实践（1.硬件支持包配置）&lt;/a&gt;  &lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1gF411T7st&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;基于Simulink的ROS2下PX4无人机控制框架-入门篇&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PX4版本：适配matlab 2022b的v1.12.3 &lt;br&gt;
Matlab版本：2022b &lt;br&gt;
windows：Windows11家庭版 &lt;br&gt;
遇到的错误：在编译时一直提示找不到.px4文件的错误如下图： &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E9%94%99%E8%AF%AF1%E6%89%BE%E4%B8%8D%E5%88%B0.px4%E6%96%87%E4%BB%B6-1.jpg&#34;
	width=&#34;852&#34;
	height=&#34;639&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;错误1找不到px4文件&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt; &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E9%94%99%E8%AF%AF1%E6%89%BE%E4%B8%8D%E5%88%B0.px4%E6%96%87%E4%BB%B6-2.jpg&#34;
	width=&#34;1345&#34;
	height=&#34;854&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;错误1找不到px4文件&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;377px&#34;
	
&gt;&lt;br&gt;
直接放弃2022的了，改用2024的Matlab进行开发的尝试。&lt;/p&gt;
&lt;h3 id=&#34;开发环境的配置1&#34;&gt;开发环境的配置1
&lt;/h3&gt;&lt;p&gt;更换各部件版本如下   &lt;br&gt;
&lt;strong&gt;电脑：LEGION Y7000P IRX9 LAPTOP&lt;/strong&gt; &lt;br&gt;
&lt;strong&gt;硬件：Intel(R) Core(TM) i7-14650HX   2.20 GHz + RTX4060 + 16GB&lt;/strong&gt; &lt;br&gt;
&lt;strong&gt;PX4版本：适配matlab 2024b的v1.14&lt;/strong&gt;     &lt;br&gt;
&lt;strong&gt;Matlab版本：2024b&lt;/strong&gt;       &lt;br&gt;
&lt;strong&gt;windows：Windows11专业版-24H2版本（现改的）&lt;/strong&gt;       &lt;br&gt;
首先安装如下的几个必须的依赖，再安装这个工具箱。   &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.1.png&#34;
	width=&#34;1701&#34;
	height=&#34;803&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;211&#34;
		data-flex-basis=&#34;508px&#34;
	
&gt; &lt;br&gt;
安装的附加功能如下 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.2.png&#34;
	width=&#34;1459&#34;
	height=&#34;751&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;466px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;wsl2的安装&#34;&gt;WSL2的安装
&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.3.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;  &lt;br&gt;
此时在WSL中没有Ubuntu系统，需要安装一下22.04的ubuntu &lt;br&gt;
不知道为啥这win11用wsl命令一直下载不下来，卡在0%半天不动。网上说是系统更新的原因。。。网上建议去手动下载，或者是Store里面下载，但是我Store也是打不开，所以手动下载地址如下： &lt;br&gt;
下载地址：&lt;a class=&#34;link&#34; href=&#34;https://learn.microsoft.com/en-us/windows/wsl/install-manual&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Manual installation steps for older versions of WSL&lt;/a&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.4.png&#34;
	width=&#34;1541&#34;
	height=&#34;850&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;435px&#34;
	
&gt;  &lt;br&gt;
安装完后显示这个错误，是因为我的设置导致新应用安装到了D盘，需要更改以下Ubuntu的位置到C盘。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.5.png&#34;
	width=&#34;813&#34;
	height=&#34;323&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;251&#34;
		data-flex-basis=&#34;604px&#34;
	
&gt;  &lt;br&gt;
卸载重装一般是没用的，这个貌似是默认安装在你选择的默认安装位置，所以需要更改默认安装位置再安装或者是直接移动App。
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.6.png&#34;
	width=&#34;763&#34;
	height=&#34;244&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;312&#34;
		data-flex-basis=&#34;750px&#34;
	
&gt;  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.7.png&#34;
	width=&#34;964&#34;
	height=&#34;832&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;115&#34;
		data-flex-basis=&#34;278px&#34;
	
&gt;  &lt;br&gt;
卸载重装是不行的，需要选择移动到C盘才可以。。。  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.8.png&#34;
	width=&#34;419&#34;
	height=&#34;275&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;152&#34;
		data-flex-basis=&#34;365px&#34;
	
&gt;  &lt;br&gt;
之后成功安装了Ubuntu系统 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.9.png&#34;
	width=&#34;1311&#34;
	height=&#34;644&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;488px&#34;
	
&gt;  &lt;br&gt;
但是仍然打开工具箱后无法跳转到下一步，按照社区给的指示操作如下。  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.10.png&#34;
	width=&#34;1117&#34;
	height=&#34;455&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;245&#34;
		data-flex-basis=&#34;589px&#34;
	
&gt;  &lt;br&gt;
更改以下系统的类型到专业版，方便后续更改电脑的语言。  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.11.png&#34;
	width=&#34;866&#34;
	height=&#34;454&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;457px&#34;
	
&gt;  &lt;br&gt;
弄到这我也是服了，这b win11语言一直下载不下来，网上尝试了各种办法都特么不行。  &lt;br&gt;
然后重启了几次，显示更新xxx，结果重新打开matlab之后便可以进行到下一步了。。。。。我特么！       &lt;br&gt;
在这里怀疑一个很大的原因是没有设置默认WSL启动为ubuntu，可以按照matlab文档里面设置一下，就CMD一个命令。然后重启打开Matlab。   &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.12.png&#34;
	width=&#34;1158&#34;
	height=&#34;389&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;297&#34;
		data-flex-basis=&#34;714px&#34;
	
&gt;   &lt;br&gt;
PS:折腾了半天，win11的语言包终于能下载了，不过也没用了。。。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/1.13.png&#34;
	width=&#34;717&#34;
	height=&#34;540&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;318px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;开发环境的配置2&#34;&gt;开发环境的配置2
&lt;/h3&gt;&lt;p&gt;ok，过了第一步剩下的其实好说。  &lt;br&gt;
配置参考：https://blog.csdn.net/weixin_29062909/article/details/138366879&lt;/p&gt;
&lt;h4 id=&#34;px4源码下载&#34;&gt;PX4源码下载
&lt;/h4&gt;&lt;p&gt;这里选择Python地址来验证。没有尝试过他的自动下载，也不建议自动。   &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.1.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.2.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;&lt;br&gt;
这里去下载PX4的源码，2024B系列Matlab支持的是PX4 v1.14版本   &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.3.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;   &lt;br&gt;
这里与之前的2022版本的Matlab的UAV工具箱不同，固件要下载到WSL目录之下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cloning the firmware in WSL2 home directory is crucial. If you clone it outside of the WSL file system, then you will encounter slow execution issues and access right / permission errors.
在 WSL2 主目录中克隆固件至关重要。如果将其克隆到 WSL 文件系统之外，那么您将遇到执行缓慢的问题和访问权限/权限错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;执行如下的命令以在WSL中下载固件。可能就是安装到C盘去了，作为我这个上古时代的电脑分盘使用者来说很不友好，弄得我很不爽。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir mypx4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd mypx4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/PX4/PX4-Autopilot.git --recursive
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd PX4-Autopilot
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout v1.14.0 -f
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule update --init --recursive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里出现了个没有分支的错误，我们创建一个。不创建也问题不大，这里官方文档中并没有这一步。       &lt;br&gt;
&lt;code&gt;git switch -c &amp;lt;v1.14&amp;gt;&lt;/code&gt;  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.4.png&#34;
	width=&#34;1428&#34;
	height=&#34;846&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;168&#34;
		data-flex-basis=&#34;405px&#34;
	
&gt;    &lt;br&gt;
接下来就是漫长的下载submodule时间。。。。     &lt;br&gt;
下载完成后，对上面的硬件设置窗口，点击下一步。
在文件资源管理器中，可以找到Linux的地址，一般是home下，找到地址复制过去。验证。ok！       &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.5.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;px4-toolchain下载以及编译程序&#34;&gt;PX4 ToolChain下载以及编译程序
&lt;/h4&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/releases/R2024b/uav/px4/ug/setup-px4-toolchain-wsl.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.mathworks.com/help/releases/R2024b/uav/px4/ug/setup-px4-toolchain-wsl.html&lt;/a&gt; &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.6.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;   &lt;br&gt;
跟着官网教程进入目录 运行脚本下载即可。这些都是前人为我们铺好的路。    &lt;br&gt;
此处时间较长可以给自己弄杯咖啡等着。。。。      &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.7.png&#34;
	width=&#34;891&#34;
	height=&#34;400&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;222&#34;
		data-flex-basis=&#34;534px&#34;
	
&gt;  &lt;br&gt;
下面检验下工具链的安装是否正确。   &lt;br&gt;
在PX4-Autopilot目录下运行了make px4_fmu-v3_default   &lt;br&gt;
出现了在ubuntu配置时以前遇到过的缺少STM32在Linux下开发工具的错误。    &lt;br&gt;
之前的解决方法：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_46430470/article/details/123938016&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;编译时报错：The CMAKE_CXX_COMPILER arm-none-eabi is not a full path and was not found in the PATH.的问题解决方法&lt;/a&gt;   &lt;br&gt;
&lt;strong&gt;重启之后，之前的错误居然没了。成功编译。&lt;/strong&gt;   &lt;br&gt;
&lt;strong&gt;这里与我之前ubuntu下配置一样。我不禁思考我在配置ubuntu时，是不是重启一下也能解决呢？&lt;/strong&gt;    &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.17.png&#34;
	width=&#34;1770&#34;
	height=&#34;860&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;205&#34;
		data-flex-basis=&#34;493px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;配置引导页面&#34;&gt;配置引导页面
&lt;/h4&gt;&lt;p&gt;重启之后，这个导引窗口也没了安装工具链那一步了。   &lt;br&gt;
让我们确认 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.8.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;  &lt;br&gt;
翻译如下： &lt;br&gt;
应该是问你是否要自己设计控制器，自己要设计控制器的话，勾选，后续可能需要自己搭建。  &lt;br&gt;
我们此处选项勾选。不勾选的以后再试试。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.9.png&#34;
	width=&#34;998&#34;
	height=&#34;316&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;315&#34;
		data-flex-basis=&#34;757px&#34;
	
&gt;  &lt;br&gt;
下一步，选择我们的F427老爷飞控。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.10.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;应该是选自启动脚本。第一个是选择在PX4自身中的默认启动脚本。第二个是选择在SD卡中的用户编辑的脚本。 &lt;br&gt;
CSDN博主说选择第二个较为繁琐，那我们选第一个。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.11.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;  &lt;br&gt;
确定QGC地面站的位置
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.12.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;  &lt;br&gt;
这一步，应该是让我们在QGC中选择鸡架,先下一步吧。Mavlink还没连接上应该也选择不了。     &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.13.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.14.png&#34;
	width=&#34;873&#34;
	height=&#34;660&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;317px&#34;
	
&gt;  &lt;br&gt;
编译工程。我们勾选删除所有目标xxxx。
我们之前人工make构建了一次，这里再点一次，直接秒成功了。可能是检测到了之前构建产生的px4文件。     &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.15.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;   &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.16.png&#34;
	width=&#34;895&#34;
	height=&#34;674&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;318px&#34;
	
&gt;  &lt;br&gt;
再次在matlab中构建，依然成功。      &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.18.png&#34;
	width=&#34;1886&#34;
	height=&#34;1008&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;187&#34;
		data-flex-basis=&#34;449px&#34;
	
&gt;  &lt;br&gt;
这里叫我们测试硬件连接。这里我拿之前焊的PX4进行连接。     &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.19.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;  &lt;br&gt;
连接上之后烧录固件。如果开着QGC，需要关掉。否则串口占用没法下载 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.20.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.21.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;   &lt;br&gt;
Matlab页面显示下载烧录完成。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.22.png&#34;
	width=&#34;1500&#34;
	height=&#34;527&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;284&#34;
		data-flex-basis=&#34;683px&#34;
	
&gt;  &lt;br&gt;
可以验证以下陀螺仪加速度数据。可以看到我这里能正常读取数据。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.23.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt; &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/2.24.png&#34;
	width=&#34;886&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;获取陀螺仪数据的simulink实例程序&#34;&gt;获取陀螺仪数据的Simulink实例程序
&lt;/h3&gt;&lt;p&gt;官方教程地址：&lt;a class=&#34;link&#34; href=&#34;https://www.mathworks.com/help/releases/R2024b/uav/px4/ref/getting-started-with-connectedio.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Getting Started with Connected I/O for PX4 Host Target&lt;/a&gt;   &lt;br&gt;
这可以作为我们的第一个开发程序。  &lt;br&gt;
在simulink建模中，模型设置，按照官方给出的指导设置如下。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.1.png&#34;
	width=&#34;1169&#34;
	height=&#34;932&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;125&#34;
		data-flex-basis=&#34;301px&#34;
	
&gt; &lt;br&gt;
Simulink建立一个这样的简单读取数据的模型。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.4.png&#34;
	width=&#34;1115&#34;
	height=&#34;530&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;210&#34;
		data-flex-basis=&#34;504px&#34;
	
&gt; &lt;br&gt;
可以看到可以成功读取到数据，仿真10秒。之前我没动，后面动了两下。实在是太开心了。     &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.2.png&#34;
	width=&#34;3200&#34;
	height=&#34;1770&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;180&#34;
		data-flex-basis=&#34;433px&#34;
	
&gt;&lt;br&gt;
再来一张吧  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.3.png&#34;
	width=&#34;3200&#34;
	height=&#34;1770&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;180&#34;
		data-flex-basis=&#34;433px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;配合可视化平台进行仿真&#34;&gt;配合可视化平台进行仿真
&lt;/h3&gt;&lt;p&gt;根据教程&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV18P4y1T7UH&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PX4与Simulink联合仿真-入门篇&lt;/a&gt;        &lt;br&gt;
我们新建一个控制电机PWM的模型如下图所示：   &lt;br&gt;
首先创建一个开关，连接PWM模块的解锁端口。并将开关的模块同Const模块连接起来，使得打开开关，值为1，否则为0。   &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.5.png&#34;
	width=&#34;1050&#34;
	height=&#34;608&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;172&#34;
		data-flex-basis=&#34;414px&#34;
	
&gt; &lt;br&gt;
设置数据类型。前两个设置为布尔类型，后面的CH通道的PWM输入设置为uint16类型。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.6.png&#34;
	width=&#34;1485&#34;
	height=&#34;1087&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;136&#34;
		data-flex-basis=&#34;327px&#34;
	
&gt; &lt;br&gt;
设置硬件参数，如下图所示。配合jMAVSim进行可视化仿真。另外，仿真运行时间设置为无穷，即设置为inf。 &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.7.png&#34;
	width=&#34;1169&#34;
	height=&#34;932&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;125&#34;
		data-flex-basis=&#34;301px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;进入Ubuntu终端，运行jmavsim可视化仿真程序。  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.8.png&#34;
	width=&#34;980&#34;
	height=&#34;242&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;404&#34;
		data-flex-basis=&#34;971px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;jmavsim程序已经启动。Simulink中点击Run In IO 即可开始。此处JmavSim自动关闭的话需要再执行命令将其打开，自动关闭是因为缺少自动启动的脚本导致的。      &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/p/simulink-px4-wsl2%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/3.9.png&#34;
	width=&#34;2132&#34;
	height=&#34;997&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;213&#34;
		data-flex-basis=&#34;513px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
