<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>YSYX on sunjiyi&#39;s Blogggg</title>
        <link>https://a233a2.github.io/tags/ysyx/</link>
        <description>Recent content in YSYX on sunjiyi&#39;s Blogggg</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Sunjiyi Make and Design</copyright>
        <lastBuildDate>Mon, 16 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://a233a2.github.io/tags/ysyx/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Linux</title>
        <link>https://a233a2.github.io/p/linux/</link>
        <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
        
        <guid>https://a233a2.github.io/p/linux/</guid>
        <description>&lt;p&gt;学习记录： &lt;a class=&#34;link&#34; href=&#34;https://docs.qq.com/sheet/DQ0lRY2tNb2VIZWVB?newPad=1&amp;amp;newPadType=clone&amp;amp;tab=BB08J4&amp;amp;_t=1728471922939&amp;amp;u=555637143d844e0f8b3d1a7c9c34bebf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;学习记录&lt;/a&gt;。 &lt;br&gt;
内容：&lt;a class=&#34;link&#34; href=&#34;https://missing-semester-cn.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The Missing Semester of Your CS Education 中文版&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;linuxbasic&#34;&gt;LinuxBasic
&lt;/h2&gt;&lt;p&gt;GUI和CLI是两种用户与计算机进行交互的方式。 &lt;br&gt;
GUI（Graphical User Interface，图形用户界面）：GUI是一种基于图形化界面的操作系统用户界面。    &lt;br&gt;
CLI（Command Line Interface，命令行界面）：CLI是一种通过在命令行或终端界面输入命令来与计算机进行交互的用户界面。  &lt;br&gt;
安装PA所需工具&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install build-essential    &lt;span class=&#34;c1&#34;&gt;# build-essential packages, include binary utilities, gcc, make, and so on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install man                &lt;span class=&#34;c1&#34;&gt;# on-line reference manual&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install gcc-doc            &lt;span class=&#34;c1&#34;&gt;# on-line reference manual for gcc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install gdb                &lt;span class=&#34;c1&#34;&gt;# GNU debugger&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install git                &lt;span class=&#34;c1&#34;&gt;# revision control system&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install libreadline-dev    &lt;span class=&#34;c1&#34;&gt;# a library used later&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install libsdl2-dev        &lt;span class=&#34;c1&#34;&gt;# a library used later&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Ubuntu 中安装中文输入法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#安装框架&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install ibus
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#切换框架&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;im-config -s ibus
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#由于Ubuntu Desktop 20.04使用的是GNOME桌面，所以需要安装相应的平台支持包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install ibus-gtk ibus-gtk3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#选择简体拼音输入法，完成安装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install ibus-pinyin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#完成安装后，将中文输入法添加到输入源选项中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以上摘录自：https://blog.csdn.net/Aimonii/article/details/141260938&lt;/p&gt;
&lt;h2 id=&#34;linux基础课程概览与shell&#34;&gt;Linux基础课程概览与shell
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;missing:~$ 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;$ 符号表示您现在的身份不是 root 用户,位置是 ~ (表示 “home”)。&lt;/p&gt;
&lt;h4 id=&#34;echo命令&#34;&gt;echo命令
&lt;/h4&gt;&lt;p&gt;‌echo命令是Linux中用于在终端输出字符串的命令，常用于脚本编程、调试和显示变量值。&lt;/p&gt;
&lt;h4 id=&#34;which命令&#34;&gt;which命令
&lt;/h4&gt;&lt;p&gt;用于定位执行文件的路径。当输入一个命令时，which 会在环境变量 PATH 所指定的路径中搜索每个目录，以查找指定的可执行文件。 可以使用 which 程序。通过直接指定需要执行的程序的路径来执行该程序。&lt;/p&gt;
&lt;h4 id=&#34;pwd命令&#34;&gt;pwd命令
&lt;/h4&gt;&lt;p&gt;获取当前工作目录。&lt;/p&gt;
&lt;h4 id=&#34;cd命令&#34;&gt;cd命令
&lt;/h4&gt;&lt;p&gt;切换目录 . 表示的是当前目录，而 .. 表示上级目录&lt;/p&gt;
&lt;h4 id=&#34;ls命令&#34;&gt;ls命令
&lt;/h4&gt;&lt;p&gt;查看指定目录下包含哪些文件 利用第一个参数指定目录，否则 ls 会打印当前目录下的文件。       &lt;br&gt;
通常，在执行程序时使用 -h 或 &amp;ndash;help 标记可以打印帮助信息，以便了解有哪些可用的标记或选项。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ls: List directory contents
dir: Briefly list directory contents
dir: Verbosely list directory contents
dircolors: Color setup for ls&lt;/p&gt;
&lt;p&gt;ls -l是Linux和unix命令，意思指以长格式的形式查看当前目录下所有可见文件的详细属性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;man命令&#34;&gt;man命令
&lt;/h4&gt;&lt;p&gt;它会接受一个程序名作为参数，然后将它的文档（用户手册）展现给您。注意，使用 q 可以退出该程序。&lt;/p&gt;
&lt;h4 id=&#34;cat命令&#34;&gt;cat命令
&lt;/h4&gt;&lt;p&gt;cat命令是Linux系统中用于查看、创建和合并文件内容的工具。‌它源自英文单词“concatenate”，意为“连接”。cat命令的基本功能是将多个文件的内容串联起来显示在标准输出（通常是终端）上。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;查看单个文件的内容‌：使用命令 cat filename。
创建新文件并输入内容‌：使用命令 cat &amp;gt; newfile，用户可以在终端中输入内容，然后使用Ctrl+D保存文件。
‌合并多个文件的内容‌：使用命令 cat file1 file2，这将合并file1和file2的内容并显示在终端上。
‌重定向输出‌：可以将命令的输出重定向到文件中，使用 &amp;gt; 符号创建新文件，使用 &amp;raquo; 符号将内容附加到现有文件。‌&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;touch命令&#34;&gt;touch命令
&lt;/h4&gt;&lt;p&gt;创建一个文件。&lt;/p&gt;
&lt;h4 id=&#34;mkdir命令&#34;&gt;mkdir命令
&lt;/h4&gt;&lt;p&gt;创建新文件夹&lt;/p&gt;
&lt;h4 id=&#34;rm命令&#34;&gt;rm命令
&lt;/h4&gt;&lt;p&gt;删除指定的文件。&lt;strong&gt;谨慎使用&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;rm &amp;lt;文件名&amp;gt;：删除指定的文件。
rm -r &amp;lt;目录名&amp;gt;：递归删除指定目录下的所有文件和子目录。
rm -f &amp;lt;文件名&amp;gt;：强制删除，不进行确认提示。
rm -i &amp;lt;文件名&amp;gt;：在删除前进行确认提示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;重定向输入输出流&#34;&gt;重定向输入输出流
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;&amp;lt; file&lt;/code&gt;和&lt;code&gt; &amp;gt; file&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; hello &amp;gt; hello.txt  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;给hello.txt里面写入hello。&lt;/p&gt;
&lt;h4 id=&#34;sudo&#34;&gt;sudo
&lt;/h4&gt;&lt;p&gt;root提升权限。&lt;/p&gt;
&lt;h4 id=&#34;chmod命令&#34;&gt;chmod命令
&lt;/h4&gt;&lt;p&gt;chmod（change mode）命令是用于控制用户对文件的权限的命令。     &lt;br&gt;
Linux/Unix 的文件调用权限分为三级 : 文件所有者（Owner）、用户组（Group）、其它用户（Other Users）如下：  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/1.1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;   &lt;br&gt;
只有文件所有者和超级用户可以修改文件或目录的权限。可以使用绝对模式（八进制数字模式），符号模式指定文件的权限，而使用权限则为所有使用者。   &lt;br&gt;
&lt;code&gt;chmod 777 file&lt;/code&gt; 给全部权限打开。读 + 写 + 执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;777&lt;/span&gt; file//表示User、Group、及Other的权限都设为rwx
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;764&lt;/span&gt; file//表示User、Group、及Other的权限分别为rwx、rw-、r--
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以上摘录自：https://blog.csdn.net/qq_52836452/article/details/129642664&lt;/p&gt;
&lt;h4 id=&#34;sh命令&#34;&gt;sh命令
&lt;/h4&gt;&lt;p&gt;sh是linux中运行shell的命令，是shell的解释器，shell脚本是linux中壳层与命令行界面，用户可以在shell脚本输入命令来执行各种各样的任务。
shell程序必须以“#!/bin/sh”开始。shell中#一般表示注释的意思，所以很多时候认为&amp;quot;#!&amp;ldquo;也是注释，但实际上并不是。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS
&amp;ldquo;#!/bin/sh&amp;quot;是对shell的声明，说明你所用的是哪种类型的shell及其路径所在。     &lt;br&gt;
#!/bin/是指此脚本使用.bin/sh来执行。    &lt;br&gt;
#!是特殊的表示符，其后面跟的是解释此脚本的shell的路径，如果没有声明，则脚本将在默认的shell中执行，默认shell是由用户所在的系统定义为执行shell脚本，如果脚本被编写为在Kornshell ksh中运行，而默认运行shell脚本的为C shell csh,则脚本在执行过程中很可能失败。所以建议大家就把&amp;rdquo;#!/bin/sh&amp;quot;当成C 语言的main函数一样，写shell必须有，以使shell程序更严密。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上摘录自：https://blog.csdn.net/mrsgflmx/article/details/143429498          &lt;br&gt;
WSL2下查看笔记本电量。虚拟机无此数据，无法查看。  &lt;br&gt;
&lt;img src=&#34;https://a233a2.github.io/1.2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;shell工具和脚本&#34;&gt;Shell工具和脚本
&lt;/h2&gt;&lt;p&gt;&amp;lsquo;xx&amp;rsquo;与&amp;quot;xx&amp;quot;符号的区别&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;bar
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$foo&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 打印 bar&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;$foo&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 打印 $foo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;bash支持函数操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mcd &lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    mkdir -p &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里 $1 是脚本的第一个参数。与其他脚本语言不同的是，bash 使用了很多特殊的变量来表示参数、错误代码和相关变量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$0&lt;/code&gt; - 脚本名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$1&lt;/code&gt; 到 &lt;code&gt;$9&lt;/code&gt; - 脚本的参数。 &lt;code&gt;$1&lt;/code&gt; 是第一个参数，依此类推。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$@&lt;/code&gt; - 所有参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$#&lt;/code&gt; - 参数个数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$?&lt;/code&gt; - 前一个命令的返回值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$$&lt;/code&gt; - 当前脚本的进程识别码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!!&lt;/code&gt; - 完整的上一条命令，包括参数。常见应用：当你因为权限不足执行命令失败时，可以使用 &lt;code&gt;sudo !!&lt;/code&gt; 再尝试一次。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$_&lt;/code&gt; - 上一条命令的最后一个参数。如果你正在使用的是交互式 shell，你可以通过按下 &lt;code&gt;Esc&lt;/code&gt; 之后键入 . 来获取这个值
命令通常使用 &lt;code&gt;STDOUT&lt;/code&gt; 来返回输出值，使用 &lt;code&gt;STDERR&lt;/code&gt; 来返回错误及错误码，便于脚本以更加友好的方式报告错误。
返回码或退出状态是脚本/命令之间交流执行状态的方式。返回值 0 表示正常执行，其他所有非 0 的返回值都表示有错误发生。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;退出码可以搭配 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;（与操作符）和 &lt;code&gt;||&lt;/code&gt;（或操作符）使用，用来进行条件判断，决定是否执行其他程序。它们都属于短路 &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Short-circuit_evaluation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;运算符&lt;/a&gt;（short-circuiting） 同一行的多个命令可以用 &lt;code&gt;;&lt;/code&gt; 分隔。程序 &lt;code&gt;true&lt;/code&gt; 的返回码永远是 &lt;code&gt;0&lt;/code&gt;，&lt;code&gt;false&lt;/code&gt; 的返回码永远是 &lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;编辑器-vim&#34;&gt;编辑器 (Vim)
&lt;/h2&gt;&lt;h2 id=&#34;数据整理&#34;&gt;数据整理
&lt;/h2&gt;&lt;h2 id=&#34;命令行环境&#34;&gt;命令行环境
&lt;/h2&gt;&lt;h2 id=&#34;版本控制git&#34;&gt;版本控制(Git)
&lt;/h2&gt;</description>
        </item>
        
    </channel>
</rss>
